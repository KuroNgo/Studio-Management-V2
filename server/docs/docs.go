// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ngô Hoài Phong",
            "url": "http://www.swagger.io/support",
            "email": "hoaiphong01012002@gmai.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client/login/email": {
            "post": {
                "description": "login user item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login user",
                "parameters": [
                    {
                        "description": "login user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/client/login/username": {
            "post": {
                "description": "Create a new user item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login user",
                "parameters": [
                    {
                        "description": "login user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/client/logout": {
            "get": {
                "description": "logout item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "logout user",
                "responses": {}
            }
        },
        "/client/refresh": {
            "get": {
                "description": "refresh token item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "refresh token user",
                "parameters": [
                    {
                        "description": "refresh token user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/client/register": {
            "post": {
                "description": "Create a new user item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "register user",
                "parameters": [
                    {
                        "description": "register user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "model.User": {
            "type": "object",
            "properties": {
                "avatarUser": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "integer"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "description": "Tên thuộc tính được đặt trong golang phải là ID nếu kiểu dữ liệu là uuid.UUID",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                },
                "who_updates": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000/",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Cỏ Studio API",
	Description:      "Đây là API của Cỏ Studio,\nViệc sử dụng API này phải có sự đồng ý của Mr. Phong\nSwagger chỉ phục vụ cho việc hiển thị các API được phép sử dụng\nNếu bạn muốn sử dụng phải thực hiện trên postman\nĐể có file test postman, bạn cần liên hệ người quản lý API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
