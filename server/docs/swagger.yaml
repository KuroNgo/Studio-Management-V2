definitions:
  model.User:
    properties:
      avatarUser:
        items:
          type: integer
        type: array
      createdAt:
        type: string
      email:
        type: string
      enable:
        type: integer
      fullName:
        type: string
      id:
        description: Tên thuộc tính được đặt trong golang phải là ID nếu kiểu dữ liệu
          là uuid.UUID
        type: string
      password:
        type: string
      phone:
        type: string
      photo:
        items:
          type: integer
        type: array
      provider:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      verified:
        type: boolean
      who_updates:
        type: string
    type: object
host: localhost:8000/
info:
  contact:
    email: hoaiphong01012002@gmai.com
    name: Ngô Hoài Phong
    url: http://www.swagger.io/support
  description: |-
    Đây là API của Cỏ Studio,
    Việc sử dụng API này phải có sự đồng ý của Mr. Phong
    Swagger chỉ phục vụ cho việc hiển thị các API được phép sử dụng
    Nếu bạn muốn sử dụng phải thực hiện trên postman
    Để có file test postman, bạn cần liên hệ người quản lý API
  title: Cỏ Studio API
  version: "1.0"
paths:
  /client/login/email:
    post:
      consumes:
      - application/json
      description: login user item
      parameters:
      - description: login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses: {}
      summary: login user
      tags:
      - users
  /client/login/username:
    post:
      consumes:
      - application/json
      description: Create a new user item
      parameters:
      - description: login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses: {}
      summary: login user
      tags:
      - users
  /client/logout:
    get:
      consumes:
      - application/json
      description: logout item
      produces:
      - application/json
      responses: {}
      summary: logout user
      tags:
      - users
  /client/refresh:
    get:
      consumes:
      - application/json
      description: refresh token item
      parameters:
      - description: refresh token user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses: {}
      summary: refresh token user
      tags:
      - users
  /client/register:
    post:
      consumes:
      - application/json
      description: Create a new user item
      parameters:
      - description: register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses: {}
      summary: register user
      tags:
      - users
swagger: "2.0"
